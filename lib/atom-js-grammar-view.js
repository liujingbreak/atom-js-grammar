// Generated by CoffeeScript 1.10.0
var $ = require('./jquery-1.12.0.js');
var Emitter = require('eventemitter3');
var AtomJsGrammarView;

module.exports = AtomJsGrammarView = (function() {
	function AtomJsGrammarView(serializedState) {
		Emitter.call(this);
		var self = this;
		self.state = serializedState;
		$ = $ ? $ : window.$;

		this.element = document.createElement('div');
		this.element.classList.add('atom-js-grammar');

		var el = $(this.element);
		self.el = el;
		el.attr('tabIndex', '1');
		el.on('keydown', function(evt) {
			if (evt.keyCode === 27 || evt.keyCode === 13 ) { //press ESC
				self.emit('close');
			}
		});

		this.title = $('<div>');
		this.title.html('The AtomJsGrammar package is Alive! It\'s ALIVE!');
		this.title.addClass('title');
		el.append(this.title);

		this.body = $('<div>');
		this.body.attr('tabIndex', '0');
		el.append(this.body);
		this.body.addClass('body');
	}
	AtomJsGrammarView.prototype = Object.create(Emitter.prototype);

	var prot = AtomJsGrammarView.prototype;

	prot.serialize = function() {};

	prot.destroy = function() {
		return this.element.remove();
	};
	prot.getElement = function() {
		return this.element;
	};
	prot.focus = function() {
		this.el.focus();
	};

	prot.render = function render() {
		this.title.html(this.state.fileName);
		var tree = this.state.tree;
		this.body.html('');
		this.view4Node(tree.child, this.body);
	};

	prot.view4Node = function(nodes, container) {
		var self = this;
		nodes.forEach(function(node) {
			var item = $('<div>');
			item.addClass('indent');
			item.append($('<div class="funcname">' + (node.name ? node.name : '()') + '</div>'));
			//var children = $('<div>');
			container.append(item);
			if (node.child) {
				self.view4Node(node.child, item);
			}
		});
	};

	return AtomJsGrammarView;
})();
